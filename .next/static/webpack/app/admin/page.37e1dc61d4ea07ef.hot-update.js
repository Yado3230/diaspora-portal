"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/page",{

/***/ "(app-pages-browser)/./actions/account-action.ts":
/*!***********************************!*\
  !*** ./actions/account-action.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   changeAccountStatus: function() { return /* binding */ changeAccountStatus; },\n/* harmony export */   deleteAccount: function() { return /* binding */ deleteAccount; },\n/* harmony export */   getAccountById: function() { return /* binding */ getAccountById; },\n/* harmony export */   getAllAccounts: function() { return /* binding */ getAllAccounts; },\n/* harmony export */   getDashboardReports: function() { return /* binding */ getDashboardReports; },\n/* harmony export */   getReportMonthlyByYear: function() { return /* binding */ getReportMonthlyByYear; }\n/* harmony export */ });\nconst API_URL = \"https://backend.coopbankoromiasc.com:8881/\";\nconst getAllAccounts = async (values)=>{\n    try {\n        let url = \"\".concat(API_URL, \"api/v1/accounts?sortBy=percentage_completed&sortDirection=desc\");\n        // Add parameters to the URL\n        // url.searchParams.append(\"sortBy\", \"percentage_completed\");\n        // url.searchParams.append(\"sortDirection\", \"desc\");\n        if (values === \"include\") {\n            url += \"&status=INITIAL\";\n        } else if (values === \"exclude\") {\n            url += \"&statusToExclude=INITIAL\";\n        }\n        // Add more parameters as needed\n        const res = await fetch(url);\n        const responseData = await res.json();\n        return responseData;\n    // const res = await fetch(`${API_URL}api/v1/accounts`);\n    // const responseData = await res.json();\n    // return responseData;\n    } catch (error) {\n        console.error(\"Error:\", error);\n        throw error; // Rethrow the error to handle it in the caller\n    }\n};\nconst getDashboardReports = async (year)=>{\n    try {\n        const url = new URL(\"\".concat(API_URL, \"api/v1/accounts/dashboard-report\"));\n        if (year) {\n            url.searchParams.append(\"year\", year.toString());\n        }\n        const res = await fetch(url.toString());\n        const responseData = await res.json();\n        return responseData;\n    } catch (error) {\n        console.error(\"Error:\", error);\n        throw error; // Rethrow the error to handle it in the caller\n    }\n};\nconst getReportMonthlyByYear = async (year)=>{\n    try {\n        const url = new URL(\"\".concat(API_URL, \"api/v1/accounts/monthly-dashboard-report\"));\n        if (year) {\n            url.searchParams.append(\"year\", year.toString());\n        }\n        const res = await fetch(url.toString());\n        const responseData = await res.json();\n        return responseData;\n    } catch (error) {\n        console.error(\"Error:\", error);\n        throw error; // Rethrow the error to handle it in the caller\n    }\n};\nconst getAccountById = async (id)=>{\n    try {\n        const res = await fetch(\"\".concat(API_URL, \"api/v1/accounts/\").concat(id));\n        return res.json();\n    } catch (error) {\n        console.error(\"Error:\", error);\n        throw error; // Rethrow the error to handle it in the caller\n    }\n};\nconst deleteAccount = async (id)=>{\n    try {\n        const res = await fetch(\"\".concat(API_URL, \"api/v1/accounts/\").concat(id), {\n            method: \"DELETE\"\n        });\n        if (!res.ok) {\n            throw new Error(\"Request failed with status: \".concat(res.status));\n        }\n        const responseData = res.ok;\n        return responseData;\n    } catch (error) {\n        console.error(\"Error:\", error);\n        throw error; // Rethrow the error to handle it in the caller\n    }\n};\nconst changeAccountStatus = async (id, status)=>{\n    try {\n        const res = await fetch(\"\".concat(API_URL, \"api/v1/accounts/\").concat(id, \"/update-status?status=\").concat(status), {\n            method: \"PUT\"\n        });\n        if (!res.ok) {\n            throw new Error(\"Request failed with status: \".concat(res.status));\n        }\n        const responseData = res.ok;\n        return responseData;\n    } catch (error) {\n        console.error(\"Error:\", error);\n        throw error; // Rethrow the error to handle it in the caller\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./actions/account-action.ts\n"));

/***/ })

});